name: Build & Release

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build for ${{ matrix.target }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz

          - os: macos-latest
            target: x86_64-apple-darwin
            archive: zip

          - os: macos-latest
            target: aarch64-apple-darwin
            archive: zip

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: ðŸ›Ž Checkout repository
        uses: actions/checkout@v4

      - name: ðŸ›  Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y pkg-config libssl-dev musl-tools
          export OPENSSL_STATIC=1
          export OPENSSL_DIR="/usr"

      - name: ðŸ›  Install zip (Windows)
        if: runner.os == 'Windows'
        run: choco install zip -y
        


      - name: ðŸ›  Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: ðŸš€ Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: ðŸ“¦ Package binary
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            zip -j dist/domain-grabber-${{ matrix.target }}.zip target/${{ matrix.target }}/release/domain-grabber-cli.exe
          else
            tar -czvf dist/domain-grabber-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release domain-grabber-cli
          fi
        shell: bash

      - name: ðŸš¢ Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
