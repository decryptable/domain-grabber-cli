name: Build & Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux-windows:
    name: Build on ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: 🛎 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: 📦 Build binary
        run: cross build --release --target ${{ matrix.target }}

      - name: 📂 Rename binary (Windows needs .exe)
        run: |
          mkdir artifacts
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv target/${{ matrix.target }}/release/domain-grabber-cli.exe artifacts/domain-grabber-cli-${{ matrix.target }}.exe
          else
            mv target/${{ matrix.target }}/release/domain-grabber-cli artifacts/domain-grabber-cli-${{ matrix.target }}
          fi

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: domain-grabber-cli-${{ matrix.target }}
          path: artifacts/*

  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - name: 🛎 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Build macOS Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: 📂 Rename binary
        run: |
          mkdir artifacts
          mv target/${{ matrix.target }}/release/domain-grabber-cli artifacts/domain-grabber-cli-${{ matrix.target }}

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: domain-grabber-cli-${{ matrix.target }}
          path: artifacts/*

  release:
    name: 🚀 Create GitHub Release
    needs: [build-linux-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🛎 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download all built binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🔖 Get Tag Name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: 📢 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
